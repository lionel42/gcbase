"""Refactor Items for lab

Revision ID: 9f8804c588c5
Revises: 1a31ce608336
Create Date: 2024-12-03 09:30:21.910374

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9f8804c588c5'
down_revision = '1a31ce608336'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('available', 'in_use', 'maintenance', 'lost', 'discarded', name='itemstatus').create(op.get_bind())
    sa.Enum('flask', 'pump', 'computer', 'other', name='itemtype').create(op.get_bind())
    op.create_table('location',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=63), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sample',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=63), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('sampled_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('analysis',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=63), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('sample_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['sample_id'], ['sample.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('measurement',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=63), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('sample_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['sample_id'], ['sample.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('flask',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('item_id', sa.Uuid(), nullable=True),
    sa.Column('sample_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], ),
    sa.ForeignKeyConstraint(['sample_id'], ['sample.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('itemlog',
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(length=2047), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('date_registered', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('operator_id', sa.Uuid(), nullable=True),
    sa.Column('item_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], ),
    sa.ForeignKeyConstraint(['operator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('item', sa.Column('type', postgresql.ENUM('flask', 'pump', 'computer', 'other', name='itemtype', create_type=False), nullable=False))
    op.add_column('item', sa.Column('status', postgresql.ENUM('available', 'in_use', 'maintenance', 'lost', 'discarded', name='itemstatus', create_type=False), nullable=False))
    op.add_column('item', sa.Column('location_id', sa.Uuid(), nullable=True))
    op.drop_constraint('item_owner_id_fkey', 'item', type_='foreignkey')
    op.create_foreign_key(None, 'item', 'location', ['location_id'], ['id'])
    op.drop_column('item', 'owner_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('item', sa.Column('owner_id', sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'item', type_='foreignkey')
    op.create_foreign_key('item_owner_id_fkey', 'item', 'user', ['owner_id'], ['id'], ondelete='CASCADE')
    op.drop_column('item', 'location_id')
    op.drop_column('item', 'status')
    op.drop_column('item', 'type')
    op.drop_table('itemlog')
    op.drop_table('flask')
    op.drop_table('measurement')
    op.drop_table('analysis')
    op.drop_table('sample')
    op.drop_table('location')
    sa.Enum('flask', 'pump', 'computer', 'other', name='itemtype').drop(op.get_bind())
    sa.Enum('available', 'in_use', 'maintenance', 'lost', 'discarded', name='itemstatus').drop(op.get_bind())
    # ### end Alembic commands ###
